#include <bits/stdc++.h>
using namespace std;
//Simplified version of official solution, couldn't solve byself
int main(){
    vector<pair<int, pair<long long,long long>>> cows;
    set<pair<long long,long long>> wait;
    int a; int b; int n;
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> a >> b;
        pair<int, pair<long long,long long>> cow = make_pair(a,make_pair(i,b));
        cows.push_back(cow);
    }
    sort(cows.begin(), cows.end());
    long long ans = 0;
    long long curfin = cows[0].first + cows[0].second.second;
    int nexcow = 1;
    while (nexcow < n || wait.size() > 0) {
        while (nexcow < n && cows[nexcow].first <= curfin) {
            wait.insert(make_pair(cows[nexcow].second.first,nexcow));
            nexcow++;
        }
        if (wait.size() == 0 && nexcow < n) {
            curfin = cows[nexcow].first + cows[nexcow].second.second;
            nexcow++;
        } 
        else if (wait.size() > 0) {
            set<pair<long long,long long>>::iterator senr = wait.begin();
            ans = max(ans, curfin - cows[senr->second].first);
            curfin += cows[senr->second].second.second;
            wait.erase(senr);
        }
    }
    cout << ans;
    return 0;
}
